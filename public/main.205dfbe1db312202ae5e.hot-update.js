/*! For license information please see main.205dfbe1db312202ae5e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/classes/page.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>a});var i=s("./node_modules/gsap/index.js"),l=s("./node_modules/gsap/ScrollTrigger.js"),o=s("./node_modules/split-type/dist/index.js"),r=s("./node_modules/@studio-freight/lenis/dist/lenis.modern.mjs"),n=s("./node_modules/prefix/index.js"),c=s.n(n);s("./node_modules/lodash/lodash.js"),s("./app/animations/Title.js");class a{constructor({element:t,elements:e}){this.element=t,this.elements=e,this.el=document.querySelector(t),this.transformPrefix=c()("transform"),i.default.registerPlugin(l.ScrollTrigger),this.scrollDirection()}create(){this.scroll={current:0,target:0,last:0,limit:0,move:0},console.log(this.el),this.createAnimation()}onWheel(t){const{deltaY:e}=t;this.scroll.target+=e}onResize(){this.elements.wrapper&&(this.scroll.limit=this.elements.wrapper.clientHeight-window.innerHeight)}update(){this.scroll.target=i.default.utils.clamp(0,this.scroll.limit,this.scroll.target),this.scroll.current=parseFloat(i.default.utils.interpolate(this.scroll.current,this.scroll.target,.1)).toFixed(2),this.scroll.current<.01&&(this.scroll.current=0),this.scroll.move=parseFloat(this.scroll.target-this.scroll.current).toFixed(2),this.elements.wrapper&&(this.elements.wrapper.style[this.transformPrefix]=`translateY(-${this.scroll.current}px)`)}smoothScroll(){console.log("lenis init",this.el);const t=new r.default({lerp:.1,smooth:!0});window.requestAnimationFrame((function e(s){t.raf(s),window.requestAnimationFrame(e)}))}scrollDirection(){this.lastScrollTop=0,this.currentScroll=0,window.addEventListener("scroll",this.getDirection.bind(this),!1),window.addEventListener("touchmove",this.getMobileDirection.bind(this))}getDirection(){this.currentScroll=window.pageYOffset||document.documentElement.scrollTop,this.currentScroll>this.lastScrollTop?this.direction="down":this.direction="up",this.lastScrollTop=this.currentScroll<=0?0:this.currentScroll,console.log(this.direction,window.pageYOffset)}getMobileDirection(t){this.currentPoint=t.clientX||t.touches[0].clientX,console.log(this.currentPoint),null!=this.lastPoint&&this.lastPoint<this.currentPoint?console.log("you scrolled up"):null!=this.lastPoint&&this.lastPoint>this.currentPoint&&console.log("you scrolled down"),this.lastPoint=this.currentPoint}animatePartials(){console.log(this.direction,window.pageYOffset)}createAnimation(){this.animations=[],this.typeSplit=new o.default("[data-split]",{types:"words, chars",tagName:"span"}),this.elementsTitles=document.querySelectorAll('[data-split="title"]'),this.elementsParagraph=document.querySelectorAll('[data-split="paragraph"]')}}}},(function(t){t.h=()=>"dc35d8cffe252a5d8922"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,