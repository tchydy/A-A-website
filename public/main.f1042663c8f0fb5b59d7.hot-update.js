/*! For license information please see main.f1042663c8f0fb5b59d7.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/slider.js":(t,e,i)=>{i.r(e),i.d(e,{default:()=>c});var s=i("./node_modules/prefix/index.js"),n=i.n(s),h=i("./node_modules/gsap/index.js"),o=i("./node_modules/gsap/ScrollTrigger.js"),r=i("./app/classes/detection.js");const l=(t,e,i)=>(1-i)*t+i*e;class c{constructor(t){this.el=document.querySelector(t.el),this.wrap=this.el.querySelector(t.wrap),this.items=this.el.querySelectorAll(t.item),this.bar=document.querySelector(t.bar),this.leftBtn=document.querySelector(".btn__left"),this.rightBtn=document.querySelector(".btn__right"),this.section=document.querySelector(".home__services"),this.wrapper=document.querySelector(".home__services__wrapper"),this.slider=document.querySelector(".home__services__gallery"),this.DragText=document.querySelector(".cursor__text1"),this.progressNumber=document.querySelector(".home__services__nav__progress__progress__number"),this.init(),console.log("slider created"),this.inView=!1,this.centerSlide=null,this.transformPrefix=n()("transform"),h.default.registerPlugin(o.ScrollTrigger),this.scroll()}init(){this.progress=0,this.speed=0,this.oldX=0,this.x=0,this.playrate=0,this.bindings(),this.calculate(),this.activeSlide(),this.events(),this.raf()}bindings(){["events","calculate","raf","handleWheel","handleLeftClicks","handleRightClicks","move","raf","handleTouchStart","handleTouchMove","handleTouchEnd","activeSlide"].forEach((t=>{this[t]=this[t].bind(this)}))}calculate(){this.windowWidth=window.innerWidth,this.wrapWidth=this.slider.getBoundingClientRect().width,this.slideY=this.wrapWidth+this.ItemWidth-window.innerWidth,this.ItemWidth=this.wrapWidth/this.items.length,(r.default.isDesktop()||r.default.isTablet())&&(this.minScroll=this.wrap.getBoundingClientRect().left-this.ItemWidth,this.windowCenter=this.windowWidth/2+.25*this.ItemWidth,this.windowLeft=this.windowWidth/2-.75*this.ItemWidth),r.default.isPhone()&&(this.minScroll=this.wrap.getBoundingClientRect().left,this.windowCenter=this.windowWidth/2+.25*this.ItemWidth,this.windowLeft=this.minScroll-20,console.log(this.windowLeft,this.windowCenter)),this.maxScroll=this.wrapWidth-this.el.clientWidth-this.minScroll,this.sectionTop=this.section.getBoundingClientRect().top}activeSlide(){this.items.forEach(((t,e)=>{this.itemBoundsLeft=t.getBoundingClientRect().left,this.isCenter=this.itemBoundsLeft<this.windowCenter&&this.itemBoundsLeft>this.windowLeft,this.isCenter?(this.centerSlide=t,this.centerSlideIndex=e,this.centerSlide.classList.add("active")):t.classList.remove("active")}))}activeSlideClick(){this.items.forEach(((t,e)=>{this.rightClick?(this.itemBoundsLeft=t.getBoundingClientRect().left-this.ItemWidth,console.log("right click")):(this.itemBoundsLeft=t.getBoundingClientRect().left+this.ItemWidth,console.log("left click")),this.isCenter=this.itemBoundsLeft<this.windowCenter&&this.itemBoundsLeft>this.windowLeft,this.isCenter?(this.centerSlide=t,this.centerSlideIndex=e,this.centerSlide.classList.add("active")):t.classList.remove("active")}))}handleWheel(t){this.inView&&(this.inView?this.progress+=t.deltaY:this.progress=0,this.move())}handleLeftClicks(t){this.rightClick=!1,console.log("left click"),this.progress-=this.ItemWidth,this.activeSlideClick(),this.progress<=this.minScroll-100&&(console.log("gallery start",this.items[0].getBoundingClientRect().left),this.slideEnd=this.items[this.items.length-1],this.progress-=this.ItemWidth,this.items.forEach(((t,e)=>{t.classList.remove("active")})),this.progress=0,setTimeout((()=>{this.progress=this.maxScroll,this.slideEnd.classList.add("active"),this.centerSlideIndex=this.items.length-1}),1e3))}handleRightClicks(t){this.clicked=!0,this.rightClick=!0,console.log("right click"),this.progress+=this.ItemWidth,this.activeSlideClick(),this.progress>=this.maxScroll&&(this.slideStart=this.items[0],this.items.forEach(((t,e)=>{t.classList.remove("active")})),this.progress=this.maxScroll,setTimeout((()=>{this.progress=this.minScroll,this.slideStart.classList.add("active"),this.centerSlideIndex=0}),1e3))}handleTouchStart(t){t.preventDefault(),this.inView&&(this.dragging=!0,this.startX=t.clientX||t.touches[0].clientX,this.el.classList.add("dragging"),this.DragText.classList.add("none"),this.click=!1)}handleTouchMove(t){if(this.click=!1,!this.inView)return;if(!this.dragging)return!1;const e=t.clientX||t.touches[0].clientX;this.progress+=2.5*(this.startX-e),this.startX=e,this.move()}handleTouchEnd(){this.click=!1,this.inView&&(this.dragging=!1,this.el.classList.remove("dragging"),this.DragText.classList.remove("none"))}move(){var t,e,i;this.click=!1,this.progress=(t=this.progress,e=this.minScroll,i=this.maxScroll,Math.max(e,Math.min(t,i))),this.activeSlide()}events(){window.addEventListener("resize",this.calculate),window.addEventListener("wheel",this.handleWheel),this.rightBtn.addEventListener("click",this.handleRightClicks),this.leftBtn.addEventListener("click",this.handleLeftClicks),this.el.addEventListener("touchstart",this.handleTouchStart),this.el.addEventListener("touchmove",this.handleTouchMove),this.el.addEventListener("touchend",this.handleTouchEnd),window.addEventListener("mousedown",this.handleTouchStart),window.addEventListener("mousemove",this.handleTouchMove),window.addEventListener("mouseup",this.handleTouchEnd),document.body.addEventListener("mouseleave",this.handleTouchEnd)}scroll(){const t=this;this.tl=h.default.timeline({scrollTrigger:{trigger:".home__about",start:"bottom 10%",toggleActions:"restart complete none reset"}}),this.tl.to(".home__about__scrolltext .word",{y:"100%",opacity:0,duration:.5}),r.default.isDesktop()||r.default.isTablet()?this.tl1=h.default.timeline({scrollTrigger:{trigger:".home__services",start:"top top",end:`+=${this.slideY}`,toggleActions:"restart complete none reset",pin:".home__services",scrub:1,onEnter:function(){t.inView=!0,t.section.classList.add("in-view")},onLeave:function(){t.DragText.classList.add("none"),t.section.classList.remove("in-view")},onLeaveBack:function(){t.DragText.classList.add("none"),t.section.classList.remove("in-view")},onEnterBack:function(){t.section.classList.add("in-view"),t.DragText.classList.remove("none")}}}):this.tl1=h.default.timeline({scrollTrigger:{trigger:".home__services",start:"top top",end:"bottom top",toggleActions:"restart complete none reset",markers:{startColor:"white",start:"services"},pin:!0,onEnter:function(){t.inView=!0,t.section.classList.add("in-view")},onLeave:function(){t.section.classList.remove("in-view")},onLeaveBack:function(){t.section.classList.remove("in-view")},onEnterBack:function(){t.section.classList.add("in-view")},onUpdate:function(e){t.scrollSlider=e.progress*t.slideY,t.progress=+t.scrollSlider,t.move(),e.markerEnd.textContent=`end: ${t.progress.toFixed(2)}`,console.log()}}}),this.tl.from(".home__services__gallery__wrapper",{display:"none"}).to(".home__services__wrapper",{opacity:1,delay:5,duration:.5,ease:"expo.out",onComplete:function(){t.inView=!0,t.DragText.classList.remove("none")}}),this.section.classList.contains("in-view")||this.DragText.classList.add("none")}moveSlider(){this.sectionTop=this.section.getBoundingClientRect().top,this.raf()}raf(){this.inView&&(this.x=l(this.x,this.progress,.1),this.playrate=this.x/this.maxScroll,this.progressNum=this.centerSlideIndex+1,this.progressNumber.innerHTML=`0${this.progressNum}/07`,this.wrap.style[this.transformPrefix]=`translateX(${-this.x}px)`,this.bar.style[this.transformPrefix]=`scaleX(${.18+.82*this.playrate})`,this.speed=Math.min(100,this.oldX-this.x),this.oldX=this.x,this.scale=l(this.scale,this.speed,.1),this.items.forEach((t=>{t.style[this.transformPrefix]=`scale(${1-.002*Math.abs(this.speed)})`,t.querySelector("img").style[this.transformPrefix]=`scaleX(${1+.004*Math.abs(this.speed)})`})))}}}},(function(t){t.h=()=>"e2839ac0accc0705c12f"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,